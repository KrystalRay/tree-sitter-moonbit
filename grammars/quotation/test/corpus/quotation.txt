================================================================================
exp
================================================================================
fn main {
  $exp:a
}
--------------------------------------------------------------------------------

(structure
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (block_expression
      (quotation_expression_expander
        (quotation_variable
          (lowercase_identifier))))))

================================================================================
pat
================================================================================
fn main {
  match $exp:a {
    $pat:p => $exp:b
  }
}
--------------------------------------------------------------------------------

(structure
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (block_expression
      (match_expression
        (quotation_expression_expander
          (quotation_variable
            (lowercase_identifier)))
        (case_clause
          (quotation_pattern_expander
            (quotation_variable
              (lowercase_identifier)))
          (quotation_expression_expander
            (quotation_variable
              (lowercase_identifier))))))))

================================================================================
function return type
================================================================================
fn $id:name() -> $ty:retty {
}
--------------------------------------------------------------------------------

(structure
  (function_definition
    (function_identifier
      (quotation_lowercase_identifier_expander
        (quotation_variable
          (lowercase_identifier))))
    (parameters)
    (return_type
      (quotation_type_expander
        (quotation_variable
          (lowercase_identifier))))
    (block_expression)))

================================================================================
let type annotation
================================================================================
let $id:id : $ty:ty = $exp:exp
--------------------------------------------------------------------------------

(structure
  (value_definition
    (quotation_lowercase_identifier_expander
      (quotation_variable
        (lowercase_identifier)))
    (type_annotation
      (quotation_type_expander
        (quotation_variable
          (lowercase_identifier))))
    (quotation_expression_expander
      (quotation_variable
        (lowercase_identifier)))))

================================================================================
Id
================================================================================
fn main {
  $Id:c($exp:a)
}
--------------------------------------------------------------------------------

(structure
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (block_expression
      (apply_expression
        (constructor_expression
          (quotation_uppercase_identifier_expander
            (quotation_variable
              (lowercase_identifier))))
        (arguments
          (argument
            (quotation_expression_expander
              (quotation_variable
                (lowercase_identifier)))))))))

================================================================================
lit
================================================================================
fn main {
  let map = { $lit:key : $exp:value }
}
--------------------------------------------------------------------------------

(structure
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (block_expression
      (let_expression
        (lowercase_identifier)
        (map_expression
          (map_element_expression
            (map_element_key
              (literal
                (quotation_literal_expander
                  (quotation_variable
                    (lowercase_identifier)))))
            (quotation_expression_expander
              (quotation_variable
                (lowercase_identifier)))))))))

================================================================================
str
================================================================================
fn main {
  println($str:s)
}

extern $str:extern fn f(a : Int) = $str:ffi
--------------------------------------------------------------------------------

(structure
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (block_expression
      (apply_expression
        (qualified_identifier
          (lowercase_identifier))
        (arguments
          (argument
            (atomic_expression
              (literal
                (string_literal
                  (quotation_string_expander
                    (quotation_variable
                      (lowercase_identifier)))))))))))
  (function_definition
    (external_linkage
      (string_literal
        (quotation_string_expander
          (quotation_variable
            (lowercase_identifier)))))
    (function_identifier
      (lowercase_identifier))
    (parameters
      (parameter
        (positional_parameter
          (lowercase_identifier)
          (type_annotation
            (qualified_type_identifier
              (identifier
                (uppercase_identifier)))))))
    (external_source
      (string_literal
        (quotation_string_expander
          (quotation_variable
            (lowercase_identifier)))))))
