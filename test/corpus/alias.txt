================================================================================
traitalias (import)
================================================================================
traitalias @quickcheck.Arbitrary
--------------------------------------------------------------------------------

(structure
  (trait_alias_definition
    (trait_alias_targets
      (package_identifier)
      (dot_identifier
        (dot_uppercase_identifier)))))

================================================================================
traitalias (rename)
================================================================================
traitalias A = B
traitalias C = @quickcheck.C
--------------------------------------------------------------------------------

(structure
  (trait_alias_definition
    (trait_alias_targets
      (qualified_type_identifier
        (identifier
          (uppercase_identifier)))
      (qualified_type_identifier
        (identifier
          (uppercase_identifier)))))
  (trait_alias_definition
    (trait_alias_targets
      (qualified_type_identifier
        (identifier
          (uppercase_identifier)))
      (qualified_type_identifier
        (package_identifier)
        (dot_identifier
          (dot_uppercase_identifier))))))

================================================================================
batched traitalias
================================================================================
traitalias @quickcheck.(
  Arbitrary,
  B,
)
--------------------------------------------------------------------------------

(structure
  (trait_alias_definition
    (trait_alias_targets
      (package_identifier)
      (trait_alias_target
        (identifier
          (uppercase_identifier)))
      (trait_alias_target
        (identifier
          (uppercase_identifier))))))

================================================================================
typealias (import)
================================================================================
typealias @a.A
typealias @a.A as a
typealias @a.a as A
typealias @a.a as a
typealias @a.a[X] as a[X]
typealias @a.a[X] as A[X]
typealias &@a.Trait as A[X]
typealias &@a.Trait as A[X]
typealias @a.(
  A,
  a,
  A as a,
  a as A,
  a as a,
  A as A
)
--------------------------------------------------------------------------------

(structure
  (type_alias_definition
    (type_alias_targets
      (package_identifier)
      (dot_identifier
        (dot_uppercase_identifier))))
  (type_alias_definition
    (type_alias_targets
      (qualified_type_identifier
        (package_identifier)
        (dot_identifier
          (dot_uppercase_identifier)))
      (identifier
        (lowercase_identifier))))
  (type_alias_definition
    (type_alias_targets
      (qualified_type_identifier
        (package_identifier)
        (dot_identifier
          (dot_lowercase_identifier)))
      (identifier
        (uppercase_identifier))))
  (type_alias_definition
    (type_alias_targets
      (qualified_type_identifier
        (package_identifier)
        (dot_identifier
          (dot_lowercase_identifier)))
      (identifier
        (lowercase_identifier))))
  (type_alias_definition
    (type_alias_targets
      (apply_type
        (qualified_type_identifier
          (package_identifier)
          (dot_identifier
            (dot_lowercase_identifier)))
        (type_arguments
          (qualified_type_identifier
            (identifier
              (uppercase_identifier)))))
      (identifier
        (lowercase_identifier))
      (type_parameters
        (type_identifier
          (identifier
            (uppercase_identifier))))))
  (type_alias_definition
    (type_alias_targets
      (apply_type
        (qualified_type_identifier
          (package_identifier)
          (dot_identifier
            (dot_lowercase_identifier)))
        (type_arguments
          (qualified_type_identifier
            (identifier
              (uppercase_identifier)))))
      (identifier
        (uppercase_identifier))
      (type_parameters
        (type_identifier
          (identifier
            (uppercase_identifier))))))
  (type_alias_definition
    (type_alias_targets
      (trait_object_type
        (qualified_type_identifier
          (package_identifier)
          (dot_identifier
            (dot_uppercase_identifier))))
      (identifier
        (uppercase_identifier))
      (type_parameters
        (type_identifier
          (identifier
            (uppercase_identifier))))))
  (type_alias_definition
    (type_alias_targets
      (trait_object_type
        (qualified_type_identifier
          (package_identifier)
          (dot_identifier
            (dot_uppercase_identifier))))
      (identifier
        (uppercase_identifier))
      (type_parameters
        (type_identifier
          (identifier
            (uppercase_identifier))))))
  (type_alias_definition
    (type_alias_targets
      (package_identifier)
      (type_alias_target
        (identifier
          (uppercase_identifier)))
      (type_alias_target
        (identifier
          (lowercase_identifier)))
      (type_alias_target
        (identifier
          (uppercase_identifier))
        (identifier
          (lowercase_identifier)))
      (type_alias_target
        (identifier
          (lowercase_identifier))
        (identifier
          (uppercase_identifier)))
      (type_alias_target
        (identifier
          (lowercase_identifier))
        (identifier
          (lowercase_identifier)))
      (type_alias_target
        (identifier
          (uppercase_identifier))
        (identifier
          (uppercase_identifier))))))

================================================================================
typealias (rename)
================================================================================
typealias A = B
typealias C = @quickcheck.C
typealias C[X] = @quickcheck.C[X]
typealias D[E, F] = @quickcheck.D[E, F]
typealias B as A
typealias @quickcheck.C as C
typealias @quickcheck.C[X] as C[X]
typealias @quickcheck.D[E, F] as D[E, F]
typealias &@quickcheck.O as D[E, F]
typealias Array[(Int, Float)] as D[E, F]
typealias (A) -> ((B) -> C) raise Error as D[A, B, C]
typealias (A) -> ((B) -> C) raise? as E[A, B, C]
--------------------------------------------------------------------------------

(structure
  (type_alias_definition
    (type_alias_targets
      (qualified_type_identifier
        (identifier
          (uppercase_identifier)))
      (qualified_type_identifier
        (identifier
          (uppercase_identifier)))))
  (type_alias_definition
    (type_alias_targets
      (qualified_type_identifier
        (identifier
          (uppercase_identifier)))
      (qualified_type_identifier
        (package_identifier)
        (dot_identifier
          (dot_uppercase_identifier)))))
  (type_alias_definition
    (type_alias_targets
      (apply_type
        (qualified_type_identifier
          (identifier
            (uppercase_identifier)))
        (type_arguments
          (qualified_type_identifier
            (identifier
              (uppercase_identifier)))))
      (apply_type
        (qualified_type_identifier
          (package_identifier)
          (dot_identifier
            (dot_uppercase_identifier)))
        (type_arguments
          (qualified_type_identifier
            (identifier
              (uppercase_identifier)))))))
  (type_alias_definition
    (type_alias_targets
      (apply_type
        (qualified_type_identifier
          (identifier
            (uppercase_identifier)))
        (type_arguments
          (qualified_type_identifier
            (identifier
              (uppercase_identifier)))
          (qualified_type_identifier
            (identifier
              (uppercase_identifier)))))
      (apply_type
        (qualified_type_identifier
          (package_identifier)
          (dot_identifier
            (dot_uppercase_identifier)))
        (type_arguments
          (qualified_type_identifier
            (identifier
              (uppercase_identifier)))
          (qualified_type_identifier
            (identifier
              (uppercase_identifier)))))))
  (type_alias_definition
    (type_alias_targets
      (qualified_type_identifier
        (identifier
          (uppercase_identifier)))
      (identifier
        (uppercase_identifier))))
  (type_alias_definition
    (type_alias_targets
      (qualified_type_identifier
        (package_identifier)
        (dot_identifier
          (dot_uppercase_identifier)))
      (identifier
        (uppercase_identifier))))
  (type_alias_definition
    (type_alias_targets
      (apply_type
        (qualified_type_identifier
          (package_identifier)
          (dot_identifier
            (dot_uppercase_identifier)))
        (type_arguments
          (qualified_type_identifier
            (identifier
              (uppercase_identifier)))))
      (identifier
        (uppercase_identifier))
      (type_parameters
        (type_identifier
          (identifier
            (uppercase_identifier))))))
  (type_alias_definition
    (type_alias_targets
      (apply_type
        (qualified_type_identifier
          (package_identifier)
          (dot_identifier
            (dot_uppercase_identifier)))
        (type_arguments
          (qualified_type_identifier
            (identifier
              (uppercase_identifier)))
          (qualified_type_identifier
            (identifier
              (uppercase_identifier)))))
      (identifier
        (uppercase_identifier))
      (type_parameters
        (type_identifier
          (identifier
            (uppercase_identifier)))
        (type_identifier
          (identifier
            (uppercase_identifier))))))
  (type_alias_definition
    (type_alias_targets
      (trait_object_type
        (qualified_type_identifier
          (package_identifier)
          (dot_identifier
            (dot_uppercase_identifier))))
      (identifier
        (uppercase_identifier))
      (type_parameters
        (type_identifier
          (identifier
            (uppercase_identifier)))
        (type_identifier
          (identifier
            (uppercase_identifier))))))
  (type_alias_definition
    (type_alias_targets
      (apply_type
        (qualified_type_identifier
          (identifier
            (uppercase_identifier)))
        (type_arguments
          (tuple_type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier)))
            (qualified_type_identifier
              (identifier
                (uppercase_identifier))))))
      (identifier
        (uppercase_identifier))
      (type_parameters
        (type_identifier
          (identifier
            (uppercase_identifier)))
        (type_identifier
          (identifier
            (uppercase_identifier))))))
  (type_alias_definition
    (type_alias_targets
      (function_type
        (qualified_type_identifier
          (identifier
            (uppercase_identifier)))
        (return_type
          (parenthesized_type
            (function_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))
              (return_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier))))))
          (error_annotation
            (qualified_type_identifier
              (identifier
                (uppercase_identifier))))))
      (identifier
        (uppercase_identifier))
      (type_parameters
        (type_identifier
          (identifier
            (uppercase_identifier)))
        (type_identifier
          (identifier
            (uppercase_identifier)))
        (type_identifier
          (identifier
            (uppercase_identifier))))))
  (type_alias_definition
    (type_alias_targets
      (function_type
        (qualified_type_identifier
          (identifier
            (uppercase_identifier)))
        (return_type
          (parenthesized_type
            (function_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))
              (return_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier))))))
          (error_annotation)))
      (identifier
        (uppercase_identifier))
      (type_parameters
        (type_identifier
          (identifier
            (uppercase_identifier)))
        (type_identifier
          (identifier
            (uppercase_identifier)))
        (type_identifier
          (identifier
            (uppercase_identifier)))))))
