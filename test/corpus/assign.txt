================================================================================
add
================================================================================
fn init {
  let mut a = 4
  a += 5
}
--------------------------------------------------------------------------------

(structure
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (block_expression
      (let_mut_expression
        (lowercase_identifier)
        (atomic_expression
          (literal
            (integer_literal))))
      (assign_expression
        (left_value
          (qualified_identifier
            (lowercase_identifier)))
        (assign_operator)
        (atomic_expression
          (literal
            (integer_literal)))))))

================================================================================
add
================================================================================
fn init {
  let mut a = 4
  a -= 5
}
--------------------------------------------------------------------------------

(structure
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (block_expression
      (let_mut_expression
        (lowercase_identifier)
        (atomic_expression
          (literal
            (integer_literal))))
      (assign_expression
        (left_value
          (qualified_identifier
            (lowercase_identifier)))
        (assign_operator)
        (atomic_expression
          (literal
            (integer_literal)))))))

================================================================================
mul
================================================================================
fn init {
  let mut a = 4
  a *= 5
}
--------------------------------------------------------------------------------

(structure
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (block_expression
      (let_mut_expression
        (lowercase_identifier)
        (atomic_expression
          (literal
            (integer_literal))))
      (assign_expression
        (left_value
          (qualified_identifier
            (lowercase_identifier)))
        (assign_operator)
        (atomic_expression
          (literal
            (integer_literal)))))))

================================================================================
div
================================================================================
fn init {
  let mut a = 4
  a /= 5
}
--------------------------------------------------------------------------------

(structure
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (block_expression
      (let_mut_expression
        (lowercase_identifier)
        (atomic_expression
          (literal
            (integer_literal))))
      (assign_expression
        (left_value
          (qualified_identifier
            (lowercase_identifier)))
        (assign_operator)
        (atomic_expression
          (literal
            (integer_literal)))))))

================================================================================
mod
================================================================================
fn init {
  a %= 5
}
--------------------------------------------------------------------------------

(structure
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (block_expression
      (assign_expression
        (left_value
          (qualified_identifier
            (lowercase_identifier)))
        (assign_operator)
        (atomic_expression
          (literal
            (integer_literal)))))))
