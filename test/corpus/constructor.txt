================================================================================
unqualified
================================================================================
fn init {
  Some
  Some(2)
}
--------------------------------------------------------------------------------

(structure
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (block_expression
      (constructor_expression
        (uppercase_identifier))
      (apply_expression
        (constructor_expression
          (uppercase_identifier))
        (arguments
          (argument
            (atomic_expression
              (literal
                (integer_literal)))))))))

================================================================================
qualified
================================================================================
fn init {
  opt::Some
  Opt::Some
}
--------------------------------------------------------------------------------

(structure
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (block_expression
      (constructor_expression
        (type_name
          (qualified_type_identifier
            (identifier
              (lowercase_identifier))))
        (uppercase_identifier))
      (constructor_expression
        (type_name
          (qualified_type_identifier
            (identifier
              (uppercase_identifier))))
        (uppercase_identifier)))))

================================================================================
package-qualified
================================================================================
fn init {
  @pkg.opt::Some
  @pkg.Opt::Some
}
--------------------------------------------------------------------------------

(structure
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (block_expression
      (constructor_expression
        (type_name
          (qualified_type_identifier
            (package_identifier)
            (dot_identifier
              (dot_lowercase_identifier))))
        (uppercase_identifier))
      (constructor_expression
        (type_name
          (qualified_type_identifier
            (package_identifier)
            (dot_identifier
              (dot_uppercase_identifier))))
        (uppercase_identifier)))))
