================================================================================
for
================================================================================
fn init {
  for i = 0; i < 10; i = i + 1 {
  }
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (expression
            (for_expression
              (for_binder
                (lowercase_identifier)
                (expression
                  (simple_expression
                    (atomic_expression
                      (literal
                        (integer_literal))))))
              (simple_expression
                (binary_expression
                  (simple_expression
                    (qualified_identifier
                      (lowercase_identifier)))
                  (simple_expression
                    (atomic_expression
                      (literal
                        (integer_literal))))))
              (for_binder
                (lowercase_identifier)
                (expression
                  (simple_expression
                    (binary_expression
                      (simple_expression
                        (qualified_identifier
                          (lowercase_identifier)))
                      (simple_expression
                        (atomic_expression
                          (literal
                            (integer_literal))))))))
              (block_expression))))))))

================================================================================
forever
================================================================================
fn init {
  for i = 0; i < 10; {
  }
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (expression
            (for_expression
              (for_binder
                (lowercase_identifier)
                (expression
                  (simple_expression
                    (atomic_expression
                      (literal
                        (integer_literal))))))
              (simple_expression
                (binary_expression
                  (simple_expression
                    (qualified_identifier
                      (lowercase_identifier)))
                  (simple_expression
                    (atomic_expression
                      (literal
                        (integer_literal))))))
              (block_expression))))))))

================================================================================
simple for
================================================================================
fn init {
  for i = 0 {
    i = i + 1
    continue i + 1
  }
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (expression
            (for_expression
              (for_binder
                (lowercase_identifier)
                (expression
                  (simple_expression
                    (atomic_expression
                      (literal
                        (integer_literal))))))
              (block_expression
                (statement_expression
                  (assign_expression
                    (left_value
                      (qualified_identifier
                        (lowercase_identifier)))
                    (expression
                      (simple_expression
                        (binary_expression
                          (simple_expression
                            (qualified_identifier
                              (lowercase_identifier)))
                          (simple_expression
                            (atomic_expression
                              (literal
                                (integer_literal)))))))))
                (statement_expression
                  (continue_expression
                    (expression
                      (simple_expression
                        (binary_expression
                          (simple_expression
                            (qualified_identifier
                              (lowercase_identifier)))
                          (simple_expression
                            (atomic_expression
                              (literal
                                (integer_literal)))))))))))))))))

================================================================================
for-in
================================================================================
fn init {
  let a = [1, 2, 3, 4, 5]
  for i in a {
    i
  }
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (let_expression
            (pattern
              (simple_pattern
                (lowercase_identifier)))
            (expression
              (simple_expression
                (array_expression
                  (expression
                    (simple_expression
                      (atomic_expression
                        (literal
                          (integer_literal)))))
                  (expression
                    (simple_expression
                      (atomic_expression
                        (literal
                          (integer_literal)))))
                  (expression
                    (simple_expression
                      (atomic_expression
                        (literal
                          (integer_literal)))))
                  (expression
                    (simple_expression
                      (atomic_expression
                        (literal
                          (integer_literal)))))
                  (expression
                    (simple_expression
                      (atomic_expression
                        (literal
                          (integer_literal))))))))))
        (statement_expression
          (expression
            (for_in_expression
              (lowercase_identifier)
              (simple_expression
                (qualified_identifier
                  (lowercase_identifier)))
              (block_expression
                (statement_expression
                  (expression
                    (simple_expression
                      (qualified_identifier
                        (lowercase_identifier)))))))))))))

================================================================================
for-else
================================================================================
fn init {
  for i = 0; i < 10; i = i + 1 {
    i
  } else {
    0
  }
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (expression
            (for_expression
              (for_binder
                (lowercase_identifier)
                (expression
                  (simple_expression
                    (atomic_expression
                      (literal
                        (integer_literal))))))
              (simple_expression
                (binary_expression
                  (simple_expression
                    (qualified_identifier
                      (lowercase_identifier)))
                  (simple_expression
                    (atomic_expression
                      (literal
                        (integer_literal))))))
              (for_binder
                (lowercase_identifier)
                (expression
                  (simple_expression
                    (binary_expression
                      (simple_expression
                        (qualified_identifier
                          (lowercase_identifier)))
                      (simple_expression
                        (atomic_expression
                          (literal
                            (integer_literal))))))))
              (block_expression
                (statement_expression
                  (expression
                    (simple_expression
                      (qualified_identifier
                        (lowercase_identifier))))))
              (else_clause
                (block_expression
                  (statement_expression
                    (expression
                      (simple_expression
                        (atomic_expression
                          (literal
                            (integer_literal)))))))))))))))

================================================================================
for-in-else
================================================================================
fn init {
  let a = [1, 2, 3, 4, 5]
  for i in a {
    i
  } else {
    0
  }
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (let_expression
            (pattern
              (simple_pattern
                (lowercase_identifier)))
            (expression
              (simple_expression
                (array_expression
                  (expression
                    (simple_expression
                      (atomic_expression
                        (literal
                          (integer_literal)))))
                  (expression
                    (simple_expression
                      (atomic_expression
                        (literal
                          (integer_literal)))))
                  (expression
                    (simple_expression
                      (atomic_expression
                        (literal
                          (integer_literal)))))
                  (expression
                    (simple_expression
                      (atomic_expression
                        (literal
                          (integer_literal)))))
                  (expression
                    (simple_expression
                      (atomic_expression
                        (literal
                          (integer_literal))))))))))
        (statement_expression
          (expression
            (for_in_expression
              (lowercase_identifier)
              (simple_expression
                (qualified_identifier
                  (lowercase_identifier)))
              (block_expression
                (statement_expression
                  (expression
                    (simple_expression
                      (qualified_identifier
                        (lowercase_identifier))))))
              (else_clause
                (block_expression
                  (statement_expression
                    (expression
                      (simple_expression
                        (atomic_expression
                          (literal
                            (integer_literal)))))))))))))))

================================================================================
for in range
================================================================================
fn main {
  for i in 0..<array.length() {
  }
  for j in 1..=array.length() {
  }
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (expression
            (for_in_range_expression
              (lowercase_identifier)
              (range_expression
                (simple_expression
                  (atomic_expression
                    (literal
                      (integer_literal))))
                (dot_dot_lt)
                (simple_expression
                  (dot_apply_expression
                    (simple_expression
                      (qualified_identifier
                        (lowercase_identifier)))
                    (dot_identifier
                      (dot)))))
              (block_expression))))
        (statement_expression
          (expression
            (for_in_range_expression
              (lowercase_identifier)
              (range_expression
                (simple_expression
                  (atomic_expression
                    (literal
                      (integer_literal))))
                (dot_dot_eq)
                (simple_expression
                  (dot_apply_expression
                    (simple_expression
                      (qualified_identifier
                        (lowercase_identifier)))
                    (dot_identifier
                      (dot)))))
              (block_expression))))))))

================================================================================
for with line break
================================================================================
fn init {
  for i = 0
      i < 10
      i = i + 1 {
  }
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (expression
            (for_expression
              (for_binder
                (lowercase_identifier)
                (expression
                  (simple_expression
                    (atomic_expression
                      (literal
                        (integer_literal))))))
              (simple_expression
                (binary_expression
                  (simple_expression
                    (qualified_identifier
                      (lowercase_identifier)))
                  (simple_expression
                    (atomic_expression
                      (literal
                        (integer_literal))))))
              (for_binder
                (lowercase_identifier)
                (expression
                  (simple_expression
                    (binary_expression
                      (simple_expression
                        (qualified_identifier
                          (lowercase_identifier)))
                      (simple_expression
                        (atomic_expression
                          (literal
                            (integer_literal))))))))
              (block_expression))))))))

================================================================================
for with loop
================================================================================
fn main {
  label~: for x in xs {
    println(x)
  }
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (expression
            (for_in_expression
              (loop_label
                (lowercase_identifier))
              (lowercase_identifier)
              (simple_expression
                (qualified_identifier
                  (lowercase_identifier)))
              (block_expression
                (statement_expression
                  (expression
                    (simple_expression
                      (apply_expression
                        (simple_expression
                          (qualified_identifier
                            (lowercase_identifier)))
                        (argument
                          (expression
                            (simple_expression
                              (qualified_identifier
                                (lowercase_identifier)))))))))))))))))
