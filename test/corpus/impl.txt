================================================================================
impl option type
================================================================================
impl Show for T? with output(self : T, logger : &Logger) -> Unit {
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (impl_definition
      (type_name
        (qualified_type_identifier
          (identifier
            (uppercase_identifier))))
      (for_keyword)
      (type
        (option_type
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))))
          (question_operator)))
      (function_identifier
        (lowercase_identifier))
      (parameters
        (parameter
          (lowercase_identifier)
          (type_annotation
            (colon)
            (type
              (apply_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier)))))))
        (parameter
          (lowercase_identifier)
          (type_annotation
            (colon)
            (type
              (trait_object_type
                (type
                  (apply_type
                    (qualified_type_identifier
                      (identifier
                        (uppercase_identifier))))))))))
      (return_type
        (type
          (apply_type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier))))))
      (block_expression))))

================================================================================
impl func type
================================================================================
impl Show for (Int) -> Unit with output(self : T, logger : &Logger) -> Unit {
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (impl_definition
      (type_name
        (qualified_type_identifier
          (identifier
            (uppercase_identifier))))
      (for_keyword)
      (type
        (function_type
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))))
          (return_type
            (type
              (apply_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier))))))))
      (function_identifier
        (lowercase_identifier))
      (parameters
        (parameter
          (lowercase_identifier)
          (type_annotation
            (colon)
            (type
              (apply_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier)))))))
        (parameter
          (lowercase_identifier)
          (type_annotation
            (colon)
            (type
              (trait_object_type
                (type
                  (apply_type
                    (qualified_type_identifier
                      (identifier
                        (uppercase_identifier))))))))))
      (return_type
        (type
          (apply_type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier))))))
      (block_expression))))

================================================================================
impl tuple
================================================================================
impl Show for (A, B) with output(self : T, logger : &Logger) -> Unit {
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (impl_definition
      (type_name
        (qualified_type_identifier
          (identifier
            (uppercase_identifier))))
      (for_keyword)
      (type
        (tuple_type
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))))
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))))))
      (function_identifier
        (lowercase_identifier))
      (parameters
        (parameter
          (lowercase_identifier)
          (type_annotation
            (colon)
            (type
              (apply_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier)))))))
        (parameter
          (lowercase_identifier)
          (type_annotation
            (colon)
            (type
              (trait_object_type
                (type
                  (apply_type
                    (qualified_type_identifier
                      (identifier
                        (uppercase_identifier))))))))))
      (return_type
        (type
          (apply_type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier))))))
      (block_expression))))

================================================================================
impl ffi
================================================================================
impl Show for (A, B) with output(self : T, logger : &Logger) -> Unit = "%s"
--------------------------------------------------------------------------------

(structure
  (structure_item
    (impl_definition
      (type_name
        (qualified_type_identifier
          (identifier
            (uppercase_identifier))))
      (for_keyword)
      (type
        (tuple_type
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))))
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))))))
      (function_identifier
        (lowercase_identifier))
      (parameters
        (parameter
          (lowercase_identifier)
          (type_annotation
            (colon)
            (type
              (apply_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier)))))))
        (parameter
          (lowercase_identifier)
          (type_annotation
            (colon)
            (type
              (trait_object_type
                (type
                  (apply_type
                    (qualified_type_identifier
                      (identifier
                        (uppercase_identifier))))))))))
      (return_type
        (type
          (apply_type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier))))))
      (external_source
        (string_literal
          (string_fragment
            (unescaped_string_fragment)))))))
