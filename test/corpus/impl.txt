================================================================================
impl option type
================================================================================
impl Show for T? with output(self : T, logger : &Logger) -> Unit {
}
--------------------------------------------------------------------------------

(structure
  (impl_definition
    (type_name
      (qualified_type_identifier
        (identifier
          (uppercase_identifier))))
    (option_type
      (qualified_type_identifier
        (identifier
          (uppercase_identifier))))
    (function_identifier
      (lowercase_identifier))
    (parameters
      (parameter
        (positional_parameter
          (lowercase_identifier)
          (type_annotation
            (qualified_type_identifier
              (identifier
                (uppercase_identifier))))))
      (parameter
        (positional_parameter
          (lowercase_identifier)
          (type_annotation
            (trait_object_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier))))))))
    (return_type
      (qualified_type_identifier
        (identifier
          (uppercase_identifier))))
    (block_expression)))

================================================================================
impl func type
================================================================================
impl Show for (Int) -> Unit with output(self : T, logger : &Logger) -> Unit {
}
--------------------------------------------------------------------------------

(structure
  (impl_definition
    (type_name
      (qualified_type_identifier
        (identifier
          (uppercase_identifier))))
    (function_type
      (qualified_type_identifier
        (identifier
          (uppercase_identifier)))
      (return_type
        (qualified_type_identifier
          (identifier
            (uppercase_identifier)))))
    (function_identifier
      (lowercase_identifier))
    (parameters
      (parameter
        (positional_parameter
          (lowercase_identifier)
          (type_annotation
            (qualified_type_identifier
              (identifier
                (uppercase_identifier))))))
      (parameter
        (positional_parameter
          (lowercase_identifier)
          (type_annotation
            (trait_object_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier))))))))
    (return_type
      (qualified_type_identifier
        (identifier
          (uppercase_identifier))))
    (block_expression)))

================================================================================
impl tuple
================================================================================
impl Show for (A, B) with output(self : T, logger : &Logger) -> Unit {
}
--------------------------------------------------------------------------------

(structure
  (impl_definition
    (type_name
      (qualified_type_identifier
        (identifier
          (uppercase_identifier))))
    (tuple_type
      (qualified_type_identifier
        (identifier
          (uppercase_identifier)))
      (qualified_type_identifier
        (identifier
          (uppercase_identifier))))
    (function_identifier
      (lowercase_identifier))
    (parameters
      (parameter
        (positional_parameter
          (lowercase_identifier)
          (type_annotation
            (qualified_type_identifier
              (identifier
                (uppercase_identifier))))))
      (parameter
        (positional_parameter
          (lowercase_identifier)
          (type_annotation
            (trait_object_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier))))))))
    (return_type
      (qualified_type_identifier
        (identifier
          (uppercase_identifier))))
    (block_expression)))

================================================================================
impl ffi
================================================================================
impl Show for (A, B) with output(self : T, logger : &Logger) -> Unit = "%s"
--------------------------------------------------------------------------------

(structure
  (impl_definition
    (type_name
      (qualified_type_identifier
        (identifier
          (uppercase_identifier))))
    (tuple_type
      (qualified_type_identifier
        (identifier
          (uppercase_identifier)))
      (qualified_type_identifier
        (identifier
          (uppercase_identifier))))
    (function_identifier
      (lowercase_identifier))
    (parameters
      (parameter
        (positional_parameter
          (lowercase_identifier)
          (type_annotation
            (qualified_type_identifier
              (identifier
                (uppercase_identifier))))))
      (parameter
        (positional_parameter
          (lowercase_identifier)
          (type_annotation
            (trait_object_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier))))))))
    (return_type
      (qualified_type_identifier
        (identifier
          (uppercase_identifier))))
    (external_source
      (string_literal
        (string_fragment
          (unescaped_string_fragment))))))
