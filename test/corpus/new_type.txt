================================================================================
new_type
================================================================================
type New(Int)
--------------------------------------------------------------------------------

(structure
  (type_definition
    (identifier
      (uppercase_identifier))
    (type
      (type
        (apply_type
          (qualified_type_identifier
            (identifier
              (uppercase_identifier))))))))

================================================================================
phantom type
================================================================================
type Length[_] Int
type Length[_]

type Kilometer
type Mile

fn[T] add(x: Length[T], y:Length[T]) -> Length[T] {
  Length::Length(x.0 + y.0)
}

let d_km: Length[Kilometer] = Length(10)
let d_mile: Length[Mile] = Length(16)
--------------------------------------------------------------------------------

(structure
  (type_definition
    (identifier
      (uppercase_identifier))
    (type_parameters
      (type_identifier
        (identifier
          (lowercase_identifier))))
    (type
      (apply_type
        (qualified_type_identifier
          (identifier
            (uppercase_identifier))))))
  (type_definition
    (identifier
      (uppercase_identifier))
    (type_parameters
      (type_identifier
        (identifier
          (lowercase_identifier)))))
  (type_definition
    (identifier
      (uppercase_identifier)))
  (type_definition
    (identifier
      (uppercase_identifier)))
  (function_definition
    (type_parameters
      (type_identifier
        (identifier
          (uppercase_identifier))))
    (function_identifier
      (lowercase_identifier))
    (parameters
      (parameter
        (positional_parameter
          (lowercase_identifier)
          (type_annotation
            (type
              (apply_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier)))
                (type_arguments
                  (type
                    (apply_type
                      (qualified_type_identifier
                        (identifier
                          (uppercase_identifier)))))))))))
      (parameter
        (positional_parameter
          (lowercase_identifier)
          (type_annotation
            (type
              (apply_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier)))
                (type_arguments
                  (type
                    (apply_type
                      (qualified_type_identifier
                        (identifier
                          (uppercase_identifier))))))))))))
    (return_type
      (type
        (apply_type
          (qualified_type_identifier
            (identifier
              (uppercase_identifier)))
          (type_arguments
            (type
              (apply_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier)))))))))
    (block_expression
      (apply_expression
        (constructor_expression
          (type_name
            (qualified_type_identifier
              (identifier
                (uppercase_identifier))))
          (uppercase_identifier))
        (arguments
          (argument
            (binary_expression
              (access_expression
                (qualified_identifier
                  (lowercase_identifier))
                (accessor))
              (access_expression
                (qualified_identifier
                  (lowercase_identifier))
                (accessor))))))))
  (value_definition
    (lowercase_identifier)
    (type_annotation
      (type
        (apply_type
          (qualified_type_identifier
            (identifier
              (uppercase_identifier)))
          (type_arguments
            (type
              (apply_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier)))))))))
    (apply_expression
      (constructor_expression
        (uppercase_identifier))
      (arguments
        (argument
          (atomic_expression
            (literal
              (integer_literal)))))))
  (value_definition
    (lowercase_identifier)
    (type_annotation
      (type
        (apply_type
          (qualified_type_identifier
            (identifier
              (uppercase_identifier)))
          (type_arguments
            (type
              (apply_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier)))))))))
    (apply_expression
      (constructor_expression
        (uppercase_identifier))
      (arguments
        (argument
          (atomic_expression
            (literal
              (integer_literal))))))))
