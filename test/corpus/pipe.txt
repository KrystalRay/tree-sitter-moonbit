================================================================================
pipe
================================================================================
fn init {
  let a = 4
    |> 3
}
--------------------------------------------------------------------------------

(structure
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (block_expression
      (let_expression
        (pattern
          (simple_pattern
            (lowercase_identifier)))
        (binary_expression
          (atomic_expression
            (literal
              (integer_literal)))
          (atomic_expression
            (literal
              (integer_literal))))))))

================================================================================
pipe (left aligned)
================================================================================
fn init {
  let a = 4
|> 3
}
--------------------------------------------------------------------------------

(structure
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (block_expression
      (let_expression
        (pattern
          (simple_pattern
            (lowercase_identifier)))
        (binary_expression
          (atomic_expression
            (literal
              (integer_literal)))
          (atomic_expression
            (literal
              (integer_literal))))))))

================================================================================
pipe (multiple empty line)
================================================================================
fn init {
  let a = 4



|> 3
}
--------------------------------------------------------------------------------

(structure
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (block_expression
      (let_expression
        (pattern
          (simple_pattern
            (lowercase_identifier)))
        (binary_expression
          (atomic_expression
            (literal
              (integer_literal)))
          (atomic_expression
            (literal
              (integer_literal))))))))

================================================================================
pipe (multiple empty line with spaces)
================================================================================
fn init {
  let a = 4  

  

|> 3
}
--------------------------------------------------------------------------------

(structure
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (block_expression
      (let_expression
        (pattern
          (simple_pattern
            (lowercase_identifier)))
        (binary_expression
          (atomic_expression
            (literal
              (integer_literal)))
          (atomic_expression
            (literal
              (integer_literal))))))))

================================================================================
pipe (comment)
================================================================================
fn init {
  let a = 4 // a
|> 3
}
--------------------------------------------------------------------------------

(structure
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (block_expression
      (let_expression
        (pattern
          (simple_pattern
            (lowercase_identifier)))
        (binary_expression
          (atomic_expression
            (literal
              (integer_literal)))
          (comment)
          (atomic_expression
            (literal
              (integer_literal))))))))

================================================================================
pipe (multi line with single line comment)
================================================================================
fn init {
  let a = 4 // a

// b

// c
|> 3
}
--------------------------------------------------------------------------------

(structure
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (block_expression
      (let_expression
        (pattern
          (simple_pattern
            (lowercase_identifier)))
        (binary_expression
          (atomic_expression
            (literal
              (integer_literal)))
          (comment)
          (comment)
          (comment)
          (atomic_expression
            (literal
              (integer_literal))))))))

================================================================================
pipe (multi line with single line comment, not left aligned)
================================================================================
fn init {
  let a = 4 // a

// b

// c
  |> 3
}
--------------------------------------------------------------------------------

(structure
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (block_expression
      (let_expression
        (pattern
          (simple_pattern
            (lowercase_identifier)))
        (binary_expression
          (atomic_expression
            (literal
              (integer_literal)))
          (comment)
          (comment)
          (comment)
          (atomic_expression
            (literal
              (integer_literal))))))))
