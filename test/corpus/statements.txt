================================================================================
raise statement
================================================================================
fn init {
  raise @json.JsonDecodeError((path, "Expected an array"))
}
--------------------------------------------------------------------------------

(structure
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (block_expression
      (raise_expression
        (apply_expression
          (constructor_expression
            (package_identifier)
            (dot_uppercase_identifier))
          (arguments
            (argument
              (tuple_expression
                (qualified_identifier
                  (lowercase_identifier))
                (atomic_expression
                  (literal
                    (string_literal
                      (string_fragment
                        (unescaped_string_fragment)))))))))))))

================================================================================
raise statement in match
================================================================================
fn init {
  match a {
    _ => raise @json.JsonDecodeError((path, "Expected an array"))
  }
}
--------------------------------------------------------------------------------

(structure
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (block_expression
      (match_expression
        (qualified_identifier
          (lowercase_identifier))
        (case_clause
          (any_pattern)
          (raise_expression
            (apply_expression
              (constructor_expression
                (package_identifier)
                (dot_uppercase_identifier))
              (arguments
                (argument
                  (tuple_expression
                    (qualified_identifier
                      (lowercase_identifier))
                    (atomic_expression
                      (literal
                        (string_literal
                          (string_fragment
                            (unescaped_string_fragment)))))))))))))))

================================================================================
unfinished code
================================================================================
fn main {
  ...
}
--------------------------------------------------------------------------------

(structure
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (block_expression
      (unfinished))))

================================================================================
return expression
================================================================================
fn main {
  return 3
}
--------------------------------------------------------------------------------

(structure
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (block_expression
      (return_expression
        (atomic_expression
          (literal
            (integer_literal)))))))
