================================================================================
basic
================================================================================
test "t" {
  let x = 1
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (test_definition
      (string_literal
        (string_fragment
          (unescaped_string_fragment)))
      (block_expression
        (statement_expression
          (let_expression
            (pattern
              (simple_pattern
                (lowercase_identifier)))
            (expression
              (simple_expression
                (atomic_expression
                  (literal
                    (integer_literal)))))))))))

================================================================================
anonymous
================================================================================
test {
  let x = 1
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (test_definition
      (block_expression
        (statement_expression
          (let_expression
            (pattern
              (simple_pattern
                (lowercase_identifier)))
            (expression
              (simple_expression
                (atomic_expression
                  (literal
                    (integer_literal)))))))))))

================================================================================
snapshot
================================================================================
test "a" (it : @test.T) {
  it.writeln("hello")
  it.snapshot!(filename="test.txt")
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (test_definition
      (string_literal
        (string_fragment
          (unescaped_string_fragment)))
      (parameters
        (parameter
          (lowercase_identifier)
          (type_annotation
            (colon)
            (type
              (apply_type
                (qualified_type_identifier
                  (package_identifier)
                  (dot_identifier
                    (dot_operator))))))))
      (block_expression
        (statement_expression
          (expression
            (simple_expression
              (dot_apply_expression
                (simple_expression
                  (qualified_identifier
                    (lowercase_identifier)))
                (dot_identifier
                  (dot_operator))
                (argument
                  (expression
                    (simple_expression
                      (atomic_expression
                        (literal
                          (string_literal
                            (string_fragment
                              (unescaped_string_fragment))))))))))))
        (statement_expression
          (expression
            (simple_expression
              (apply_expression
                (simple_expression
                  (access_expression
                    (simple_expression
                      (qualified_identifier
                        (lowercase_identifier)))
                    (accessor
                      (dot_identifier
                        (dot_operator)))))
                (argument
                  (argument_label
                    (simple_expression
                      (qualified_identifier
                        (lowercase_identifier))))
                  (expression
                    (simple_expression
                      (atomic_expression
                        (literal
                          (string_literal
                            (string_fragment
                              (unescaped_string_fragment))))))))))))))))
