================================================================================
try
================================================================================
fn main {
  try {
    println("hello")
  } catch {
    _ => ()
  }
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (expression
            (try_expression
              (expression
                (simple_expression
                  (nonempty_block_expression
                    (statement_expression
                      (expression
                        (simple_expression
                          (apply_expression
                            (simple_expression
                              (qualified_identifier
                                (lowercase_identifier)))
                            (argument
                              (expression
                                (simple_expression
                                  (atomic_expression
                                    (literal
                                      (string_literal
                                        (string_fragment
                                          (unescaped_string_fragment)))))))))))))))
              (case_clause
                (pattern
                  (simple_pattern))
                (case_clause_body
                  (expression
                    (simple_expression
                      (unit_expression))))))))))))

================================================================================
try with else
================================================================================
fn main {
  try {
    println("hello")
  } catch {
    _ => ()
  } else {
    1 + 1
  }
}
--------------------------------------------------------------------------------

(structure
  (structure_item
    (function_definition
      (function_identifier
        (lowercase_identifier))
      (block_expression
        (statement_expression
          (expression
            (try_expression
              (expression
                (simple_expression
                  (nonempty_block_expression
                    (statement_expression
                      (expression
                        (simple_expression
                          (apply_expression
                            (simple_expression
                              (qualified_identifier
                                (lowercase_identifier)))
                            (argument
                              (expression
                                (simple_expression
                                  (atomic_expression
                                    (literal
                                      (string_literal
                                        (string_fragment
                                          (unescaped_string_fragment)))))))))))))))
              (case_clause
                (pattern
                  (simple_pattern))
                (case_clause_body
                  (expression
                    (simple_expression
                      (unit_expression)))))
              (else_clause
                (block_expression
                  (statement_expression
                    (expression
                      (simple_expression
                        (binary_expression
                          (simple_expression
                            (atomic_expression
                              (literal
                                (integer_literal))))
                          (simple_expression
                            (atomic_expression
                              (literal
                                (integer_literal)))))))))))))))))
