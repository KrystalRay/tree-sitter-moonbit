================================================================================
Option type
================================================================================
type T (Int) -> Int?
--------------------------------------------------------------------------------

(structure
  (type_definition
    (identifier
      (uppercase_identifier))
    (type
      (function_type
        (type
          (apply_type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier)))))
        (return_type
          (type
            (option_type
              (apply_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier)))))))))))

================================================================================
error type
================================================================================
type T0 (Int) -> Int!
type T1 (Int) -> Int?!
type T2 (Int) -> Int!Error
type T3 (Int) -> Int?!Error?
type T4 () -> ((Int) -> Int)!Error
type T5 () -> ((Int) -> Int)?!Error?
type T6 () -> ((Int) -> Int?!)!Error?
--------------------------------------------------------------------------------

(structure
  (type_definition
    (identifier
      (uppercase_identifier))
    (type
      (function_type
        (type
          (apply_type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier)))))
        (return_type
          (apply_type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier))))))))
  (type_definition
    (identifier
      (uppercase_identifier))
    (type
      (function_type
        (type
          (apply_type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier)))))
        (return_type
          (option_type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))))))))
  (type_definition
    (identifier
      (uppercase_identifier))
    (type
      (function_type
        (type
          (apply_type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier)))))
        (return_type
          (apply_type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier))))
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))))))))
  (type_definition
    (identifier
      (uppercase_identifier))
    (type
      (function_type
        (type
          (apply_type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier)))))
        (return_type
          (option_type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))))
          (type
            (option_type
              (apply_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier))))))))))
  (type_definition
    (identifier
      (uppercase_identifier))
    (type
      (function_type
        (return_type
          (tuple_type
            (type
              (function_type
                (type
                  (apply_type
                    (qualified_type_identifier
                      (identifier
                        (uppercase_identifier)))))
                (return_type
                  (type
                    (apply_type
                      (qualified_type_identifier
                        (identifier
                          (uppercase_identifier)))))))))
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))))))))
  (type_definition
    (identifier
      (uppercase_identifier))
    (type
      (function_type
        (return_type
          (option_type
            (tuple_type
              (type
                (function_type
                  (type
                    (apply_type
                      (qualified_type_identifier
                        (identifier
                          (uppercase_identifier)))))
                  (return_type
                    (type
                      (apply_type
                        (qualified_type_identifier
                          (identifier
                            (uppercase_identifier))))))))))
          (type
            (option_type
              (apply_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier))))))))))
  (type_definition
    (identifier
      (uppercase_identifier))
    (type
      (function_type
        (return_type
          (tuple_type
            (type
              (function_type
                (type
                  (apply_type
                    (qualified_type_identifier
                      (identifier
                        (uppercase_identifier)))))
                (return_type
                  (option_type
                    (apply_type
                      (qualified_type_identifier
                        (identifier
                          (uppercase_identifier)))))))))
          (type
            (option_type
              (apply_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier)))))))))))

================================================================================
error annotation
================================================================================
type T0 (Int) -> Int raise
type T1 (Int) -> Int? raise
type T2 (Int) -> Int raise Error
type T3 (Int) -> Int? raise Error
type T4 () -> ((Int) -> Int) raise Error
type T5 () -> ((Int) -> Int)? raise Error
fn f() -> Int raise {}
fn f() -> Int? raise {}
fn f() -> Int raise Error {}
fn f() -> Int? raise Error {}
fn f() -> Int raise? {}
fn f() -> Int? raise? {}
fn f() -> (Int) -> Int raise Error {}
fn f() -> ((Int) -> Int) raise Error {}
fn f() raise {}
fn f() raise Error {}
fn f() raise? {}
--------------------------------------------------------------------------------

(structure
  (type_definition
    (identifier
      (uppercase_identifier))
    (type
      (function_type
        (type
          (apply_type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier)))))
        (return_type
          (apply_type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier))))
          (error_annotation)))))
  (type_definition
    (identifier
      (uppercase_identifier))
    (type
      (function_type
        (type
          (apply_type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier)))))
        (return_type
          (option_type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))))
          (error_annotation)))))
  (type_definition
    (identifier
      (uppercase_identifier))
    (type
      (function_type
        (type
          (apply_type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier)))))
        (return_type
          (apply_type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier))))
          (error_annotation
            (type
              (apply_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier))))))))))
  (type_definition
    (identifier
      (uppercase_identifier))
    (type
      (function_type
        (type
          (apply_type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier)))))
        (return_type
          (option_type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))))
          (error_annotation
            (type
              (apply_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier))))))))))
  (type_definition
    (identifier
      (uppercase_identifier))
    (type
      (function_type
        (return_type
          (tuple_type
            (type
              (function_type
                (type
                  (apply_type
                    (qualified_type_identifier
                      (identifier
                        (uppercase_identifier)))))
                (return_type
                  (type
                    (apply_type
                      (qualified_type_identifier
                        (identifier
                          (uppercase_identifier)))))))))
          (error_annotation
            (type
              (apply_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier))))))))))
  (type_definition
    (identifier
      (uppercase_identifier))
    (type
      (function_type
        (return_type
          (option_type
            (tuple_type
              (type
                (function_type
                  (type
                    (apply_type
                      (qualified_type_identifier
                        (identifier
                          (uppercase_identifier)))))
                  (return_type
                    (type
                      (apply_type
                        (qualified_type_identifier
                          (identifier
                            (uppercase_identifier))))))))))
          (error_annotation
            (type
              (apply_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier))))))))))
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (parameters)
    (return_type
      (apply_type
        (qualified_type_identifier
          (identifier
            (uppercase_identifier))))
      (error_annotation))
    (block_expression))
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (parameters)
    (return_type
      (option_type
        (apply_type
          (qualified_type_identifier
            (identifier
              (uppercase_identifier)))))
      (error_annotation))
    (block_expression))
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (parameters)
    (return_type
      (apply_type
        (qualified_type_identifier
          (identifier
            (uppercase_identifier))))
      (error_annotation
        (type
          (apply_type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier)))))))
    (block_expression))
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (parameters)
    (return_type
      (option_type
        (apply_type
          (qualified_type_identifier
            (identifier
              (uppercase_identifier)))))
      (error_annotation
        (type
          (apply_type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier)))))))
    (block_expression))
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (parameters)
    (return_type
      (apply_type
        (qualified_type_identifier
          (identifier
            (uppercase_identifier))))
      (error_annotation))
    (block_expression))
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (parameters)
    (return_type
      (option_type
        (apply_type
          (qualified_type_identifier
            (identifier
              (uppercase_identifier)))))
      (error_annotation))
    (block_expression))
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (parameters)
    (return_type
      (type
        (function_type
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))))
          (return_type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier))))
            (error_annotation
              (type
                (apply_type
                  (qualified_type_identifier
                    (identifier
                      (uppercase_identifier))))))))))
    (block_expression))
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (parameters)
    (return_type
      (tuple_type
        (type
          (function_type
            (type
              (apply_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier)))))
            (return_type
              (type
                (apply_type
                  (qualified_type_identifier
                    (identifier
                      (uppercase_identifier)))))))))
      (error_annotation
        (type
          (apply_type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier)))))))
    (block_expression))
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (parameters)
    (error_annotation)
    (block_expression))
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (parameters)
    (error_annotation
      (type
        (apply_type
          (qualified_type_identifier
            (identifier
              (uppercase_identifier))))))
    (block_expression))
  (function_definition
    (function_identifier
      (lowercase_identifier))
    (parameters)
    (error_annotation)
    (block_expression)))

================================================================================
trait object type
================================================================================
type T &Logger

impl Show for T with output(self : T, logger : &Logger) -> Unit {
}
--------------------------------------------------------------------------------

(structure
  (type_definition
    (identifier
      (uppercase_identifier))
    (type
      (trait_object_type
        (qualified_type_identifier
          (identifier
            (uppercase_identifier))))))
  (impl_definition
    (type_name
      (qualified_type_identifier
        (identifier
          (uppercase_identifier))))
    (type
      (apply_type
        (qualified_type_identifier
          (identifier
            (uppercase_identifier)))))
    (function_identifier
      (lowercase_identifier))
    (parameters
      (parameter
        (positional_parameter
          (lowercase_identifier)
          (type_annotation
            (type
              (apply_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier))))))))
      (parameter
        (positional_parameter
          (lowercase_identifier)
          (type_annotation
            (type
              (trait_object_type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier)))))))))
    (return_type
      (type
        (apply_type
          (qualified_type_identifier
            (identifier
              (uppercase_identifier))))))
    (block_expression)))

================================================================================
extern type
================================================================================
priv extern type A

extern type B
--------------------------------------------------------------------------------

(structure
  (type_definition
    (visibility)
    (identifier
      (uppercase_identifier)))
  (type_definition
    (identifier
      (uppercase_identifier))))
